@model IEnumerable<Employees.Models.Employee>
@{
    ViewData["Title"] = $"Employees pg. {ViewData["page"]}";
    var prevPage = ViewData["prevPage"];
}

<h2>Employees pg. @ViewData["page"]</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NetWage)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NetWage)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    @if ((int)prevPage >= 0)
    {
    <a asp-action="List" asp-route-id="@prevPage">Previous page</a>
    }
    @ViewData["page"]
    @if (Model.Count() >= 10)
    {
        <a asp-action="List" asp-route-id="@ViewData["nextPage"]">Next page</a>
    }
</p>
